// - ------------------------------------------------------------------------------------------ - //
// Assert //
// - ------------------------------------------------------------------------------------------ - //
#ifndef __Rebel_Assert_H__
#define __Rebel_Assert_H__
// - ------------------------------------------------------------------------------------------ - //
#include "Log.h"
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#if !defined(NDEBUG) && !defined(NOLOGGING)
// - ------------------------------------------------------------------------------------------ - //
#ifdef _MSC_VER
// - ------------------------------------------------------------------------------------------ - //
// Assertion //
#define Assert( ___TEST, ___STR, ... ) \
	if ( ___TEST ) { \
		Log( "- ======================================================== -" ); \
		Log( "Assert Error: " ___STR, ## __VA_ARGS__ ); \
		Log( "   Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( "   Func: $s", __func__ ); \
		Log( "- ======================================================== -" ); \
		exit(1); \
	}
// - ------------------------------------------------------------------------------------------ - //
// Warnings //
#define Warning( ___TEST, ___STR, ... ) \
	if ( ___TEST ) { \
		Log( "- -------------------------------------------------------- -" ); \
		Log( "Warning: " ___STR, ## __VA_ARGS__ ); \
		Log( "   Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( "   Func: $s\n", __func__ ); \
	}
// - ------------------------------------------------------------------------------------------ - //
// Error Logging //
#define ELog( ___STR, ... ) \
	{ \
		Log( "Error: " ___STR, ## __VA_ARGS__ ); \
		Log( " Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( " Func: $s\n", __func__ ); \
	}
// - ------------------------------------------------------------------------------------------ - //
#else // _MSC_VER //
// - ------------------------------------------------------------------------------------------ - //
// Assertion //
#define Assert( ___TEST, ___STR, ___ARGS... ) \
	if ( ___TEST ) { \
		Log( "- ======================================================== -" ); \
		Log( "Assert Error: " ___STR, ## __ARGS ); \
		Log( "   Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( "   Func: $s", __PRETTY_FUNCTION__ ); \
		Log( "- ======================================================== -" ); \
		exit(1); \
	}
// - ------------------------------------------------------------------------------------------ - //
// Warnings //
#define Warning( ___TEST, ___STR, ___ARGS... ) \
	if ( ___TEST ) { \
		Log( "Warning: " ___STR, ## ___ARGS ); \
		Log( "   Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( "   Func: $s\n", __PRETTY_FUNCTION__ ); \
	}
// - ------------------------------------------------------------------------------------------ - //
// Error Logging //
#define ELog( ___STR, ___ARGS... ) \
	{ \
		Log( "Error: " ___STR, ## ___ARGS ); \
		Log( " Line: %s  File: %s", __LINE__, __FILE__ ); \
		Log( " Func: $s\n", __PRETTY_FUNCTION__ ); \
	}
// - ------------------------------------------------------------------------------------------ - //
#endif // _MSC_VER //
// - ------------------------------------------------------------------------------------------ - //
#else // NDEBUG NOLOGGING //
// - ------------------------------------------------------------------------------------------ - //
#define Assert( ... ) ;
#define Warning( ... ) ;
// - ------------------------------------------------------------------------------------------ - //
#endif // NDEBUG NOLOGGING //
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#endif // __Rebel_Assert_H__ //
// - ------------------------------------------------------------------------------------------ - //
