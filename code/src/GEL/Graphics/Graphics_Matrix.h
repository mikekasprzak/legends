// - ------------------------------------------------------------------------------------------ - //
#ifndef __Graphics_Matrix_H__
#define __Graphics_Matrix_H__
// - ------------------------------------------------------------------------------------------ - //
#include <Math/Matrix.h>
// - ------------------------------------------------------------------------------------------ - //
extern Matrix4x4 ViewMatrix;
extern Matrix4x4 ModelMatrix;
extern Matrix4x4 ModelViewMatrix;
// - ------------------------------------------------------------------------------------------ - //
#include "Native/OpenGL/GELS_Matrix.h"
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
inline void gelLoadMatrix( const Matrix4x4& m ) {
#ifdef GELS_LOAD_MATRIX
	gels_LoadMatrix( m );
#endif // GELS_LOAD_MATRIX //
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
inline void gelMultMatrix( const Matrix4x4& m ) {
#ifdef GELS_MULT_MATRIX
	gels_MultMatrix( m );
#endif // GELS_MULT_MATRIX //
}
// - ------------------------------------------------------------------------------------------ - //


/*
// - ------------------------------------------------------------------------------------------ - //
inline void gelInitMatrix() {
	Matrix = Matrix3x3::Identity;	
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelPushMatrix() {
	MatrixStack->push_back( Matrix );	
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelPeepMatrix() {
	Matrix = MatrixStack->back();	
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelPopMatrix() {
	// TODO: Log an error if too many pops //
	gelPeepMatrix();
	MatrixStack->pop_back();	
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
inline void gelFlipX() {
	Matrix(0,0) = -Matrix(0,0);
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelFlipY() {
	Matrix(1,1) = -Matrix(1,1);
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelTranslate( const Vector2D& v ) {
	Matrix *= Matrix3x3::Translating( v );
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelTranslate( const Real _x, const Real _y, const Real _z = Real::Zero ) {
	Matrix *= Matrix3x3::Translating( Vector2D( _x, _y ) );
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelScale( const Real Scalar ) {
	Matrix *= Matrix3x3::Scaling( Scalar );
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelRotate( const Vector2D& v ) {
	Matrix *= Matrix3x3::Rotating( v );
}
// - ------------------------------------------------------------------------------------------ - //
inline void gelRotate( const Real& Angle ) {
	Matrix *= Matrix3x3::Rotating( Angle );
}
// - ------------------------------------------------------------------------------------------ - //
*/

// - ------------------------------------------------------------------------------------------ - //
#endif // __Graphics_Matrix_H__ //
// - ------------------------------------------------------------------------------------------ - //
